// Autogenerated from {{ self._TemplateReference__context.name | format_template_name }} file
{% set group_path = group_name + '.' + app_name | lower %}
package {{ group_path }}.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import {{ group_path }}.service.{{ custom_api_name }}Service;
import java.util.List;

{% for api in apis %}
     {%  if api.apiPath.lower() not in entity_names %}
    	{% for endpoint in api.requests %}
            {% if endpoint.returnValue and endpoint.returnValue.typeOfType != 'SimpleType' %}
import {{ group_path }}.dto.{{endpoint.returnValue.type | format_type}};
            {% endif %}
            {% if endpoint.bodyParam and endpoint.bodyParam.typeOfType != 'SimpleType' %}
import {{ group_path }}.dto.{{endpoint.bodyParam.type | format_type}};
            {% endif %}
        {% endfor %}
    {% endif %}
{% endfor %}

{% set service = (custom_api_name | lower_first_str) + 'Service' %}

@CrossOrigin
@RestController
@RequestMapping( path = "/{{ custom_api_name | lower_first_str }}")
public class {{ custom_api_name }}Controller {

    @Autowired
    private {{ custom_api_name }}Service {{ service }};

{% for api in apis %}
    {%  if api.apiPath.lower() not in entity_names %}
    	{% for endpoint in api.requests %}
            {% set ret_type = endpoint.returnValue.type | format_type %}
            {% if endpoint.pathParam %}
                {% set pp_type = endpoint.pathParam.type | format_type %}
                {% set pp_name = endpoint.pathParam.name  %}
                {% set pp_def = '@PathVariable ' + pp_type + ' ' + pp_name  %}
            {% endif %}
            {% if endpoint.bodyParam %}
                {% set bp_type = endpoint.bodyParam.type | format_type %}
                {% set bp_name = 'dto'  %}
                {% set bp_def = '@RequestBody ' + bp_type + ' ' + bp_name %}
            {% endif %}
            {% if endpoint.pathParam and endpoint.bodyParam %}
                {% set separator = ', ' %}
            {% endif %}
    @{{ endpoint.methodType | capitalize }}Mapping(path = "/{{ endpoint.methodPath }}")
    public {{ret_type}} {{ endpoint.methodPath }}({{pp_def}}{{ separator }}{{bp_def}}) {
        return {{ service }}.{{ endpoint.methodPath }}({{ pp_name }}{{ separator }}{{bp_name}});
    }
        {% endfor %}
    {% endif %}
{% endfor %}
}